{"version":3,"file":"static/js/682.d2b05c76.chunk.js","mappings":"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","sources":["hooks/http.hook.js","services/MarvelService.js","components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {request, clearError, process, setProcess}\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = \"https://marvel-server-zeta.vercel.app/\";\n\tconst _apiKey = \"apikey=d4eecb0c66dedbfae4eab45d312fc1df\";\n\tconst _baseOffset = 0;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetAllCharacters,\n\t\tgetCharacterByName,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t};\n};\n\nexport default useMarvelService;\n","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"names":["useMarvelService","request","clearError","process","setProcess","useHttp","useState","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","json","e","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","data","results","map","getCharacterByName","getCharacter","res","getAllComics","getComic","ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","arr","item","i","Link","to","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"sourceRoot":""}